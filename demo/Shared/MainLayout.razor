@inherits LayoutComponentBase

<AppDrawer 
    KeepState
    @bind-ModalOnly="@ModalOnly"
    @bind-ResponsiveBreakpoint="@ResponsiveBreakpoint"
    @bind-Color="@Color"
    @bind-BackgroundMode="@BackgroundMode"
    @bind-BackgroundColorDirection="@BackgroundColorDirection"
    @bind-BackgroundColorStart="@BackgroundColorStart" 
    @bind-BackgroundColorEnd="@BackgroundColorEnd"
    BackgroundImage="skyline.jpg">

    @if (HasHeader && !ScrollableHeader)
    {
        <AppDrawerHeader 
            Image="blazor.png"
            @bind-UseImage="@UseImage" 
            @bind-Title="@Title"
            @bind-Subtitle="@Subtitle" />
    }

    <AppDrawerContent>

        @if (HasHeader && ScrollableHeader)
        {
            <AppDrawerHeader 
            Image="blazor.png"
            @bind-UseImage="@UseImage" 
            @bind-Title="@Title"
            @bind-Subtitle="@Subtitle" />
        }
        
        <nav class="nav flex-column">
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                    @* <span class="oi oi-home" aria-hidden="true" tabindex="0"></span> Home *@
                    <Icon Variant="home" Text="Home" />
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="counter">
                    <span class="oi oi-plus" aria-hidden="true"></span> Counter
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="fetchdata">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> Fetch data
                </NavLink>
            </div>
            <AppDrawerContentDivider />
            <AppDrawerContentSubheader>Account</AppDrawerContentSubheader>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="login">
                    <span class="oi oi-account-login" aria-hidden="true" tabindex="0"></span> Login
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="register">
                    <span class="oi oi-person" aria-hidden="true"></span> Register
                </NavLink>
            </div>
            <AppDrawerContentDivider />
            <AppDrawerContentSubheader>Other Actions</AppDrawerContentSubheader>
            <AppDrawerContentSubheader>(demonstrates srcollability)</AppDrawerContentSubheader>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="other">
                    <span class="oi oi-list" aria-hidden="true" tabindex="0"></span> Action
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="other2">
                    <span class="oi oi-list" aria-hidden="true" tabindex="0"></span> Action 2
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="other3">
                    <span class="oi oi-list" aria-hidden="true" tabindex="0"></span> Action 3
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="other4">
                    <span class="oi oi-list" aria-hidden="true" tabindex="0"></span> Action 4
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="other5">
                    <span class="oi oi-list" aria-hidden="true" tabindex="0"></span> Action 5
                </NavLink>
            </div>
            <AppDrawerContentDivider />
            <AppDrawerContentSubheader>More Actions</AppDrawerContentSubheader>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="other6">
                    <span class="oi oi-list" aria-hidden="true" tabindex="0"></span> Action 6
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="other7">
                    <span class="oi oi-list" aria-hidden="true" tabindex="0"></span> Action 7
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="other8">
                    <span class="oi oi-list" aria-hidden="true" tabindex="0"></span> Action 8
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="other9">
                    <span class="oi oi-list" aria-hidden="true" tabindex="0"></span> Action 9
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="other10">
                    <span class="oi oi-list" aria-hidden="true" tabindex="0"></span> Action 10
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="other11">
                    <span class="oi oi-list" aria-hidden="true" tabindex="0"></span> Action 11
                </NavLink>
            </div>
            <AppDrawerContentDivider />
            <AppDrawerContentSubheader>Even More Actions</AppDrawerContentSubheader>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="other12">
                    <span class="oi oi-list" aria-hidden="true" tabindex="0"></span> Action 12
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="other13">
                    <span class="oi oi-list" aria-hidden="true" tabindex="0"></span> Action 13
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="other14">
                    <span class="oi oi-list" aria-hidden="true" tabindex="0"></span> Action 14
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="other15">
                    <span class="oi oi-list" aria-hidden="true" tabindex="0"></span> Action 15
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="other16">
                    <span class="oi oi-list" aria-hidden="true" tabindex="0"></span> Action 16
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="other17">
                    <span class="oi oi-list" aria-hidden="true" tabindex="0"></span> Action 17
                </NavLink>
            </div>
        </nav>
    </AppDrawerContent>
</AppDrawer>

<div class="main @AppDrawer.AppContentMarker">
    <div class="top-row px-4">
        <button id="@AppDrawer.AppDrawerButtonMarker" class="navbar-toggler no-outline mr-auto">
            <span class="oi oi-menu align-middle"></span>
        </button>
        <a href="https://github.com/Mobsites/Blazor.TopAppBar" target="_blank" class="ml-md-auto pr-2 pr-md-0"><img src="github.png" width="24" height="24" /></a>
        <a href="https://github.com/Mobsites" target="_blank" class="pr-2 pr-md-0"><img src="mobsites-logo.png" width="24" height="24" /></a>
        <a href="https://github.com/allan-mobley-jr" target="_blank"><img src="me.png" width="24" height="24" /></a>
    </div>

    <div class="content px-4">
        <CascadingValue Value="this">
            @Body
        </CascadingValue>
    </div>
</div>

@code {
    private bool modalOnly;
    public bool ModalOnly
    {
        get => modalOnly;
        set 
        {
            modalOnly = value;
            StateHasChanged();
        }
    }

    private int? responsiveBreakpoint = 900;
    public int? ResponsiveBreakpoint
    {
        get => responsiveBreakpoint;
        set 
        {
            responsiveBreakpoint = value;
            StateHasChanged();
        }
    }

    private bool hasHeader = true;
    public bool HasHeader
    {
        get => hasHeader;
        set 
        {
            hasHeader = value;
            StateHasChanged();
        }
    }

    private bool scrollableHeader;
    public bool ScrollableHeader
    {
        get => scrollableHeader;
        set 
        {
            scrollableHeader = value;
            StateHasChanged();
        }
    }

    private string title = "Demo";
    public string Title
    {
        get => title; 
        set
        {
            title = value;
            StateHasChanged();
        }
    }

    private string subtitle;
    public string Subtitle
    {
        get => subtitle; 
        set
        {
            subtitle = value;
            StateHasChanged();
        }
    }

    private bool useImage = true;
    public bool UseImage
    {
        get => useImage;
        set 
        {
            useImage = value;
            StateHasChanged();
        }
    }

    private BackgroundModes backgroundMode = BackgroundModes.Gradient;
    public BackgroundModes BackgroundMode
    {
        get => backgroundMode; 
        set
        {
            backgroundMode = value;
            StateHasChanged();
        }
    }

    private BackgroundColorDirections backgroundColorDirection = BackgroundColorDirections.TopToBottom;
    public BackgroundColorDirections BackgroundColorDirection
    {
        get => backgroundColorDirection;
        set 
        {
            backgroundColorDirection = value;
            StateHasChanged();
        }
    }

    private string backgroundColorStart = "rgb(5, 39, 103)";
    public string BackgroundColorStart
    {
        get => backgroundColorStart;
        set 
        {
            backgroundColorStart = value;
            StateHasChanged();
        }
    }

    private string backgroundColorEnd = "#3a0647";
    public string BackgroundColorEnd
    {
        get => backgroundColorEnd;
        set 
        {
            backgroundColorEnd = value;
            StateHasChanged();
        }
    }

    private string color = "white";
    public string Color
    {
        get => color;
        set 
        {
            color = value;
            StateHasChanged();
        }
    }
}